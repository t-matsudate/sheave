var searchIndex = new Map(JSON.parse('[\
["sheave_client",{"doc":"","t":"CHHHHHHH","n":["handlers","handle_connect","handle_create_stream","handle_fc_publish","handle_first_handshake","handle_publish","handle_release_stream","handle_second_handshake"],"q":[[0,"sheave_client"],[1,"sheave_client::handlers"],[8,"core::pin"],[9,"tokio::io::async_read"],[10,"tokio::io::async_write"],[11,"core::marker"]],"d":["","Handles a connect command as a client.","Handles a createStream command as a client.","Handles a FCPublish command as a client.","Handles a handshake chunk of the first step as a client.","Handles a publish command as a client.","Handles a releaseStream command as a client.","Handles a handshake chunk of the second step as a client. â€¦"],"i":[0,0,0,0,0,0,0,0],"f":[0,[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]]],"c":[],"p":[[5,"Pin",8],[10,"AsyncRead",9],[10,"AsyncWrite",10],[10,"Unpin",11]],"b":[]}],\
["sheave_core",{"doc":"","t":"FKKFNNNNCNNMNNNNNNNNNNNNNNNNNNNNQMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCHNNCCNQNNNNNNCNNNNNNNNNNNCFGPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNKKFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPTTPGFTTPPTTFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPTGKFKFFFFTGFFFFTFPFFPPFFFFFPFPPKCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNCHHNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNHNNHNNNNNNNNNNCNNFPFPFPGFPFPFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPPPPPGGGEPPPEPPEPPTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHHH","n":["ByteBuffer","Decoder","Encoder","InsufficientBufferLength","borrow","borrow","borrow_mut","borrow_mut","cli","clone","clone_into","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","default","ecma_array","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","fmt","fmt","fmt","from","from","from","get_bytes","get_f64","get_u16_be","get_u32_be","get_u8","handlers","handshake","insufficient_buffer_length","into","into","messages","net","new","object","peek_u8","put_bytes","put_f64","put_u16_be","put_u32_be","put_u8","readers","remained","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","writers","InvalidProtocol","Protocol","Rtmp","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","from","from","from","from","from","from","from_str","into","into","invalid_protocol","new","to_owned","to_possible_value","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value_variants","vzip","vzip","AsyncHandler","AsyncHandlerExt","InconsistentSha","LastChunk","RtmpContext","StreamWrapper","VecStream","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","clone","clone_into","default","default","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_client_handshake","get_client_handshake_mut","get_command_object","get_encryption_algorithm","get_information","get_last_received_chunk","get_last_received_chunk_mut","get_last_sent_chunk","get_last_sent_chunk_mut","get_message_id","get_message_id","get_message_length","get_message_type","get_play_path","get_properties","get_publishing_name","get_publishing_type","get_receiving_chunk_size","get_sending_chunk_size","get_server_handshake","get_timestamp","get_transaction_id","inconsistent_sha","increase_transaction_id","insert_received_chunk","insert_sent_chunk","into","into","into","into","into","is_signed","make_weak_mut","make_weak_pin","new","new","new","poll_flush","poll_flush","poll_handle","poll_read","poll_read","poll_shutdown","poll_shutdown","poll_write","poll_write","set_client_handshake","set_command_object","set_encryption_algorithm","set_information","set_message_id","set_play_path","set_properties","set_publishing_name","set_publishing_type","set_receiving_chunk_size","set_sending_chunk_size","set_server_handshake","set_signed","set_transaction_id","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","vzip","Blowfish","CLIENT_KEY","COMMON_KEY","DiffieHellman","EncryptionAlgorithm","Handshake","LATEST_CLIENT","LATEST_SERVER","NotEncrypted","Other","SERVER_KEY","UNSIGNED","Version","Xtea","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","did_digest_match","did_signature_match","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","get_bytes","get_digest","get_major_version","get_signature","get_timestamp","get_version","imprint_digest","imprint_signature","into","into","into","new","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Audio","CHANNEL","Channel","ChunkData","ChunkSize","Command","Connect","ConnectResult","CreateStream","CreateStreamResult","EVENT_TYPE","EventType","FcPublish","InconsistentCommand","InconsistentEventType","InvalidPublishingType","MESSAGE_TYPE","NegativeChunkSize","Network","OnFcPublish","OnStatus","Other","Other","Publish","PublishingFailure","ReleaseStream","ReleaseStreamResult","SetDataFrame","Source","StreamBegin","StreamBegin","System","UserControl","amf","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_chunk_size","get_command_name","get_command_name","get_command_name","get_command_name","get_command_name","get_command_name","get_command_name","get_command_name","get_command_name","get_command_name","get_command_name","get_command_object","get_data","get_info_object","get_information","get_message_id","get_message_id","get_name","get_play_path","get_play_path","get_properties","get_publishing_name","get_publishing_type","get_transaction_id","get_transaction_id","get_transaction_id","get_transaction_id","get_transaction_id","get_transaction_id","get_transaction_id","get_transaction_id","get_transaction_id","get_transaction_id","get_transaction_id","hash","headers","inconsistent_command","inconsistent_event_type","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalid_publishing_type","negative_chunk_size","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","partial_cmp","publishing_failure","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","InconsistentMarker","InvalidString","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","inconsistent_marker","into","into","invalid_string","new","new","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","v0","vzip","vzip","AmfString","AmfString","Boolean","Boolean","EcmaArray","EcmaArray","Marker","Null","Null","Number","Number","Object","Object","ObjectEnd","Other","add","add","add_assign","add_assign","as_boolean","as_integer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","default","default","deref","deref_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_properties","get_properties","get_properties_mut","get_properties_mut","hash","hash","into","into","into","into","into","into","into","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BasicHeader","ChunkSize","Command","Continue","Continue","Data","MessageFormat","MessageHeader","MessageType","New","New","New","Other","SameSource","SameSource","SameSource","TimerChange","TimerChange","TimerChange","U24_MAX","UserControl","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_chunk_id","get_message_format","get_message_id","get_message_length","get_message_type","get_timestamp","into","into","into","into","new","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","rtmp","RtmpStream","as_fd","as_raw_fd","async_io","borrow","borrow_mut","connect","fmt","from","from","from_std","into","into_split","into_std","linger","local_addr","nodelay","peek","peer_addr","poll_flush","poll_peek","poll_read","poll_read_ready","poll_shutdown","poll_write","poll_write_ready","poll_write_vectored","readable","ready","set_linger","set_nodelay","set_ttl","split","take_error","try_from","try_from","try_into","try_io","try_read","try_read_buf","try_read_vectored","try_write","try_write_vectored","ttl","type_id","vzip","writable","read_basic_header","read_chunk","read_chunk_data","read_encryption_algorithm","read_extended_timestamp","read_handshake","read_message_header","write_basic_header","write_chunk","write_chunk_data","write_encryption_algorithm","write_extended_timestamp","write_handshake","write_message_header"],"q":[[0,"sheave_core"],[92,"sheave_core::cli"],[127,"sheave_core::handlers"],[243,"sheave_core::handshake"],[307,"sheave_core::messages"],[662,"sheave_core::messages::amf"],[691,"sheave_core::messages::amf::v0"],[849,"sheave_core::messages::headers"],[929,"sheave_core::net"],[930,"sheave_core::net::rtmp"],[977,"sheave_core::readers"],[984,"sheave_core::writers"],[991,"std::io::error"],[992,"core::fmt"],[993,"core::fmt"],[994,"std::io::error"],[995,"core::result"],[996,"core::any"],[997,"std::ffi::os_str"],[998,"std::ffi::os_str"],[999,"core::option"],[1000,"core::marker"],[1001,"core::fmt"],[1002,"alloc::sync"],[1003,"core::pin"],[1004,"core::task::wake"],[1005,"core::task::poll"],[1006,"tokio::io::async_write"],[1007,"tokio::io::read_buf"],[1008,"tokio::io::async_read"],[1009,"core::cmp"],[1010,"core::hash"],[1011,"alloc::string"],[1012,"std::os::fd::owned"],[1013,"std::os::fd::raw"],[1014,"tokio::io::interest"],[1015,"core::ops::function"],[1016,"tokio::net::addr"],[1017,"tokio::net::tcp::stream"],[1018,"std::net::tcp"],[1019,"tokio::net::tcp::split_owned"],[1020,"tokio::net::tcp::split_owned"],[1021,"std::io"],[1022,"tokio::io::ready"],[1023,"tokio::net::tcp::split"],[1024,"tokio::net::tcp::split"],[1025,"std::io"],[1026,"futures_util::future::poll_fn"]],"d":["The stream buffer for encoding/decoding chunk data.","Decodes bytes into a chunk data. This can return errors â€¦","Encodes a chunk data into bytes.","An error that buffer has been empty during decoding chunks.","","","","","The common CLI options.","","","","Decodes bytes into a ChunkSize.","Decodes bytes into an AMFâ€™s Object type.","Decodes bytes into a StreamBegin event.","Decodes bytes into an ECMA array.","Decodes bytes into a Connect command.","Decodes bytes into an AMFâ€™s Number.","Decodes bytes into a Publish command.","Decodes bytes into an OnFcPublish command.","Decodes bytes into a FcPublish command.","Decodes bytes into a SetDataFrame message.","Decodes bytes into a CreateStreamResult command.","Decodes bytes into a ConnectResult command.","Decodes bytes into a ReleaseStream command.","Decodes bytes into a ReleaseStreamResult command.","Decodes bytes into an AMFâ€™s String.","Decodes bytes into an AMFâ€™s Boolean.","Decodes bytes into a CreateStream command.","Decodes bytes into an AMFâ€™s Null.","Decodes bytes into an OnStatus command.","","Constructs an ECMA array.","","Encodes an AMFâ€™s Number into bytes.","Encodes an AMFâ€™s Object into bytes.","Encodes a CreateStreamResult command into bytes.","Encodes an AMFâ€™s Null into bytes.","Encodes a ReleaseStreamResult command into bytes.","Encodes an ECMA array into bytes.","Encodes a ConnectResult command into bytes.","Encodes an AMFâ€™s Boolean into bytes.","Encodes a CreateSteam command into bytes.","Encodes a Connect command into bytes.","Encodes a ReleaseStream command into bytes.","Encodes an OnFcPublish command into bytes.","Encodes an AMF String into bytes.","Encodes a Publish command into bytes.","Encodes a StreamBegin event into bytes.","Encodes an OnStatus command into bytes.","Encodes a SetDataFrame message into bytes.","Encodes a FcPublish command into bytes.","Encodes a ChunkSize into bytes.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Tries getting arbitrary bytes from buffer.","Tries getting 8 bytes from buffer, as a 64 bits floating â€¦","Tries getting 2 bytes from buffer, as the big endian.","Tries getting 4 bytes from buffer, as the big endian.","Tries getting 1 byte from buffer.","Handling RTMP connections and data streaming.","Types for the handshake step in RTMP.","A utility function of constructing an â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The RTMP Messages","","Constructs this error.","Constructs an AMFâ€™s Object.","Peeks 1 byte from buffer. This keeps bufferâ€™s current â€¦","Puts arbitrary bytes into buffer.","Puts 8 bytes into buffer, as a 64 bits floating point â€¦","Puts 2 bytes into buffer, as the big endian.","Puts 4 bytes into buffer, as the big endian.","Puts 1 byte into buffer.","","Computes remained length in this buffer.","","","","","","","","","","","","An error that specified protocol via CLI is invalid.","The available protocol representation for CLI.","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A utility funciton of constructing an <code>InvalidProtocol</code> â€¦","Constructs this error.","","","","","","","","","","","","","The interface for handling RTMP connection steps with â€¦","The extension methods for handlers.","Tells that either digests or signatures are inconsistent â€¦","The chunk information which is sent/received last.","RTMPâ€™s common contexts.","The wrapper for stream types.","The simple stream for stdâ€™s buffer-like types.","","","","","","","","","","","Chains this handler with <code>next</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a client-side handshake bytes. Note this can return â€¦","Gets a client-side handshake bytes as mutable. Note:","Gets a command object sent from a client. Note this can â€¦","Gets specieifed algorithm to encrypt this handshake. Note â€¦","Gets a information object of a server. Note this can â€¦","Loads a last received chunk. If no last chunk is stored â€¦","Loads a last received chunk as mutable. If no last chunk â€¦","Loads a last sent chunk. If no last chunk is stored â€¦","Loads a last sent chunk as mutable. If no last chunk is â€¦","Gets a message ID.","Gets a message ID of this stream. Note this can return <code>None</code>â€¦","Gets a message length.","Gets a message type.","Gets a play path (e.g. filename) sent from a client. Note â€¦","Gets a properties object of a server. Note this can return â€¦","Gets a publishing name of this stream. Note this can â€¦","Gets a publishing type of this stream. Note this can â€¦","Gets a chunking size which reads from streams.","Gets a chunkign size which writes into stream.","Gets a server-side handshake bytes. Note this can return â€¦","Gets a timestamp.","Gets a transaction ID sent.","A utility function for wrapping the error <code>InconsistentSha</code> â€¦","Increases current transaction ID. Mainly, this is used by â€¦","Stores a last received chunk.","Stores a last sent chunk.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates whether the handshake is signed.","Gets a mutable reference via this wrapped by <code>Arc</code>. Sheave â€¦","Makes this stream into <em>pinned</em> weak pointer.","Constructs a LastChunk. Note the message ID is set 0 when â€¦","Constructs this error.","Constructs a wrapped stream.","","","","","","","","","","Stores a cleint-side handshake bytes.","Sets a command object sent from a client.","Stores the algorithm to encrypt this handshake.","Sets a information object of a server.","Sets a message ID of this stream.","Sets a play path (e.g. filename) sent from a client.","Sets a properties object of a server.","Sets a publishing name of this stream.","Sets a publishing type of this stream.","Sets a chunking size which reads from streams.","Sets a chunking size which writes into streams.","Stores a server-side handshake bytes.","Stores a flag to mean this handshake is signed.","Sets a transaction ID. Mainly, this is used by server side â€¦","","","","","","","","","","","","","","","","","","Updates this chunk information into a new one passed. Note â€¦","","","","","","","The key which is used to imprint ant client-side digest.","The key which is used to imprint any signature. Both sides â€¦","","Representation of first 1 byte in handshake.","The 1536 bytes handshake data. This respectively consists â€¦","The latest version of Flash Player.","The latest version of Flash Media Server.","","","The key which is used to imprint any server-side digest.","Bytes meant not to use HMAC-SHA256.","Bytes to indicate Flash Player version/Flash Media Server â€¦","","","","","","","","","","","","","Checks whether imprinted digest matches with one computed â€¦","Checks whether imprinted signature matches one computed by â€¦","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets all handshake data.","Gets a digest contained in this handshake bytes. Note its â€¦","Gets a number of major version either Flash Player or â€¦","Gets a signature contained into this handshake bytes.","Gets first 4 bytes as timestamp.","Gets second 4 bytes as Flash Player version/Flash Media â€¦","Imprints an HMAC-SHA256 digest into handshake data.","Imprints an HMAC-SHA256 signature into handshake data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs handshake data.","","","","","","","","","","","","","","","","","The IDs which are assigned every roles of chunks. This is â€¦","Uniforms chunk data by a channel numbers and a message â€¦","Tells a size to chunk its stream to the partner.","The accessor for common fields in every command chunk.","The command to tell the information that where connects â€¦","The response message for Connect requests.","The command to request emitting a message ID to a server.","The response message for CreateStream requests.","","The IDs which are types of user control messages.","The command to tell the Play Path. Typically, this becomes â€¦","An error means that some command name differs you expect.","An error means that some event type differs you expect.","An error that some publishing type differs you expect.","","An error that some chunk size is negative.","","The response message for FcPublish requests.","The response message for Publish requests.","","","The command to tell publishing information.","An error that publishing has failed by something cause.","The command to tell the Play Path (e.g. something file â€¦","The response message for ReleaseStream requests.","The data message to handle the metadata of FLV.","","The event to tell that the stream is ready to a client.","","","Uniforms user control messages by an event type.","The Action Message Formats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a ChunkSize with its default value. In RTMP, â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Gets an internal value.","","Gets the command name. In this request, itâ€™s fixed to â€¦","Gets the result which is either <code>&quot;_result&quot;</code> or <code>&quot;_error&quot;</code>.","","Gets the result which is either <code>&quot;_result&quot;</code> or <code>&quot;_error&quot;</code>.","","","","Gets the result which is either <code>&quot;_result&quot;</code> or <code>&quot;_error&quot;</code>.","","","Gets the command object in this request.","Gets the data of this message.","Gets the info object.","Gets the information object.","Gets the message ID which is assigned to this stream.","Gets the message ID which this event has.","Gets the data name of this message.","Gets the Play Path.","Gets the Play Path.","Gets the properties object.","Gets the publishing identifier. (e.g. filename, username, â€¦","Gets one of publishing type which is either <code>&quot;live&quot;</code>, â€¦","","Gets the transaction ID. In this request, itâ€™s fixed to <code>1</code>â€¦","Gets the transaction ID in this response. In this â€¦","","Gets the transaction ID in this response.","","","","Gets the transaction ID in this response.","","","","The Chunk Headers","A utility function of constructing an <code>InconsistentCommand</code> â€¦","A utility function of constructing an <code>InconsistentEventType</code>â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A utility function of constructing an <code>InvalidPublishingType</code>â€¦","A utility function of constructing a <code>NegativeChunkSize</code> â€¦","Constructs this error.","Constructs a Connect command.","Constructs this error.","Constructs a chunk size.","Constructs a ConnectResult command.","Constructs a ReleaseStream command.","Constructs a ReleaseStreamResult command.","Constructs a FcPublish command.","Constructs a CreateStream command.","Constructs a CreateStreamResult command.","Constructs this error.","Constructs a Publish command.","Constructs this error.","Constructs a StreamBegin event.","Constructs this error.","Constructs an OnStatus command.","Constructs a new SetDataFrame message.","","A utility function of constructing a <code>PublishingFailure</code> â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error that some AMF type marker differes you expect.","An error that some string data is invalid for UTF-8.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","A utility function of constructing an <code>InconsistentMarker</code> â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A utility function of constructing an <code>InvalidString</code> error.","Constructs this error.","Constructs this error.","","","","","","","","","The AMF Data Types (version 0).","","","The UTF-8 string of AMF data types.","","The boolean representation of AMF data types. This uses 1 â€¦","","The <strong>sized</strong> object type of AMF. This consists of:","","Representation of markers of the AMF data types.","The value to mean that has no content.","","The IEEE 754 double precision floating point number of AMF â€¦","","The anonymous object type of AMF. This consists of pairs â€¦","","","","","","","","Gets an inner value as a boolean value.","Gets an inner value as an integer. This is prepared for â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Gets immutable properties from this object.","Gets immutable properties from this array.","Gets mutable properties from this object.","Gets mutable properties from this array.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs an AMFâ€™s Number.","Constructs an AMFâ€™s Boolean.","Constructs an AMFâ€™s String.","Constrcuts a new object.","Constructs a new ECMA array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the chunk stream and message headerâ€™s format. â€¦","","","","","","The first 2 bits to indicate a format of message header.","Indicates a chunk datum format and which stream is it into.","Representation of message type id byte of the Message â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts message format bits into a variant.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Gets the chunk ID.","Gets the message format.","Gets a message ID. All but 11 bytes type returns <code>None</code>.","Gets a message length. 0 bytes type and 3 bytes type â€¦","Gets a message type. 0 bytes type and 3 bytes type return â€¦","Gets a timestamp. Only 0 bytes type returns <code>None</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a new basic header.","","","","","","","","","","","","","","","","","","","","","","A stream for RTMP that wrapped Tokioâ€™s <code>TcpStream</code>. If you â€¦","","","Reads or writes from the socket using a user-provided IO â€¦","","","Opens a RTMP connection to a remote host. When connection â€¦","","Returns the argument unchanged.","","Creates new RtmpStream from a <code>std::net::TcpStream</code>. When â€¦","Calls <code>U::from(self)</code>.","Splits a TcpStream into a read half and a write half, â€¦","Turns a <code>sheave_core::net::rtmp::RtmpStream into </code>â€¦","Reads the linger duration for this socket by getting the â€¦","Returns the local address that this stream is bound to. â€¦","Gets the value of the TCP_NODELAY option on this socket. â€¦","Receives data on the socket from the remote address to â€¦","Returns the remote address that this stream is connected â€¦","Same as Tokioâ€™s TcpStream except awaits until gets â€¦","Attempts to receive data on the socket, without removing â€¦","Same as Tokioâ€™s TcpStream except awaits until gets â€¦","Polls for read readiness. Read more","Same as Tokioâ€™s TcpStream except awaits until gets â€¦","Same as Tokioâ€™s TcpStream except awaits until gets â€¦","Polls for write readiness. Read more","Same as Tokioâ€™s TcpStream except awaits until gets â€¦","Waits for the socket to become readable. Read more","Waits for any of the requested ready states. Read more","Sets the linger duration of this socket by setting the â€¦","Sets the value of the TCP_NODELAY option on this socket. â€¦","Sets the value for the IP_TTL option on this socket. Read â€¦","Splits a TcpStream into a read half and a write half, â€¦","Returns the value of the <code>SO_ERROR</code> option.","Consumes stream, returning the RtmpStream.","","","Tries to read or write from the socket using a â€¦","Tries to read data from the stream into the provided â€¦","Tries to read data from the stream into the provided â€¦","Tries to read data from the stream into the provided â€¦","Tries to write several buffers to the stream, returning â€¦","Tries to write several buffers to the stream, returning â€¦","Gets the value of the IP_TTL option for this socket. Read â€¦","","","Waits for the socket to become writable. Read more","Reads basic header from stream.","Reads a chunk from streams.","Reads a chunk datum from stream.","Reads one byte to indicate the encryption algorithm from â€¦","Reads extended timestamp from stream.","Reads actual handshake data from stream.","Reads message header from stream.","Writes basic header into stream,","Writes a chunk into streams.","Writes a chunk data into stream.","Writes one byte to indicate the encryption algorithm into â€¦","Writes extended timestramp into stream.","Writes actual handshake data into stream.","Writes message header from stream."],"i":[0,0,0,0,25,1,25,1,0,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,25,25,1,25,1,1,1,1,1,1,1,0,0,0,25,1,0,0,25,0,1,1,1,1,1,1,0,1,1,25,25,1,25,1,25,1,25,1,0,0,0,39,40,39,40,39,39,39,40,40,39,40,39,39,39,39,39,39,40,39,0,40,39,39,40,40,39,40,39,40,39,39,40,39,0,0,0,0,0,0,0,49,50,52,53,51,49,50,52,53,51,46,49,49,50,51,49,50,52,52,53,51,49,50,52,53,51,50,50,50,50,50,50,50,50,50,49,50,49,49,50,50,50,50,50,50,50,49,50,0,50,50,50,49,50,52,53,51,50,50,53,49,52,53,53,51,47,53,51,53,51,53,51,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,52,49,50,52,53,51,49,50,52,53,51,49,50,52,53,51,49,49,50,52,53,51,56,55,55,56,0,0,68,68,56,56,55,68,0,56,68,56,55,68,56,55,68,56,68,56,56,55,55,68,56,68,56,55,68,68,56,56,55,55,55,55,68,55,55,55,55,55,68,56,55,55,68,56,68,56,55,68,56,55,68,56,55,68,56,55,70,113,0,0,0,0,0,0,0,0,114,0,0,0,0,0,113,0,70,0,0,70,71,0,0,0,0,0,70,0,71,70,0,0,73,9,74,5,16,17,18,13,12,21,15,75,11,76,7,77,23,14,70,71,73,9,74,5,16,17,18,13,12,21,15,75,11,76,7,77,23,14,70,71,9,5,16,17,18,13,12,21,15,11,7,23,14,70,71,9,5,16,17,18,13,12,21,15,11,7,23,14,70,71,70,9,5,16,21,15,23,14,9,5,5,16,17,18,13,12,21,15,11,7,23,14,70,71,73,73,9,74,74,5,16,17,18,13,12,21,15,75,75,11,76,76,7,77,77,23,14,70,71,73,9,74,5,16,17,18,13,12,21,15,75,11,76,7,77,23,14,70,70,71,71,5,78,9,16,17,18,13,12,21,15,11,23,9,14,23,16,15,7,14,17,13,16,11,11,78,9,16,17,18,13,12,21,15,11,23,70,0,0,0,73,9,74,5,16,17,18,13,12,21,15,75,11,76,7,77,23,14,70,71,0,0,73,9,74,5,16,17,18,13,21,15,75,11,76,7,77,23,14,70,0,9,5,16,17,18,13,12,21,15,11,7,23,14,70,71,73,74,75,76,77,73,9,74,5,16,17,18,13,12,21,15,75,11,76,7,77,23,14,70,71,73,9,74,5,16,17,18,13,12,21,15,75,11,76,7,77,23,14,70,71,73,9,74,5,16,17,18,13,12,21,15,75,11,76,7,77,23,14,70,71,73,9,74,5,16,17,18,13,12,21,15,75,11,76,7,77,23,14,70,71,0,0,80,81,80,81,80,80,81,81,80,81,0,80,81,0,80,81,80,81,80,81,80,81,80,81,0,80,81,0,84,0,84,0,84,0,0,84,0,84,0,84,84,84,10,10,10,10,20,10,10,20,19,6,22,8,84,10,20,19,6,22,8,84,10,20,19,6,22,8,84,10,20,19,6,22,8,84,20,19,10,20,19,6,8,19,19,10,10,20,20,19,19,19,19,6,22,8,84,10,20,19,19,6,22,8,84,10,10,10,10,10,10,10,10,10,20,19,19,19,19,6,6,6,22,8,84,84,6,8,6,8,20,19,10,20,19,6,22,8,84,10,20,19,6,8,10,10,20,20,19,10,20,19,6,22,8,84,19,10,20,19,6,22,8,84,10,20,19,6,22,8,84,10,20,19,6,22,8,84,10,20,19,6,22,8,84,0,57,57,90,62,57,0,0,0,0,90,62,57,0,90,62,0,90,62,62,57,90,91,57,62,90,91,57,62,90,91,57,62,90,91,57,62,90,57,90,91,57,62,90,90,91,57,57,62,91,91,62,62,62,62,90,91,57,62,91,90,91,57,62,90,91,57,62,90,91,57,62,90,91,57,62,90,91,57,62,0,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[[-1,-2],2,[],[]],[3,[[4,[-1]]],[]],[1,[[4,[5]]]],[1,[[4,[6]]]],[1,[[4,[7]]]],[1,[[4,[8]]]],[1,[[4,[9]]]],[1,[[4,[10]]]],[1,[[4,[11]]]],[1,[[4,[12]]]],[1,[[4,[13]]]],[1,[[4,[14]]]],[1,[[4,[15]]]],[1,[[4,[16]]]],[1,[[4,[17]]]],[1,[[4,[18]]]],[1,[[4,[19]]]],[1,[[4,[20]]]],[1,[[4,[21]]]],[1,[[4,[22]]]],[1,[[4,[23]]]],[[],1],0,[[24,-1],2,[]],[[1,10],2],[[1,6],2],[[1,15],2],[[1,22],2],[[1,18],2],[[1,8],2],[[1,16],2],[[1,20],2],[[1,21],2],[[1,9],2],[[1,17],2],[[1,12],2],[[1,19],2],[[1,11],2],[[1,7],2],[[1,23],2],[[1,14],2],[[1,13],2],[[1,5],2],[[25,26],27],[[25,26],27],[[1,26],27],[-1,-1,[]],[[[29,[28]]],1],[-1,-1,[]],[[1,30],[[4,[[31,[28]]]]]],[1,[[4,[32]]]],[1,[[4,[33]]]],[1,[[4,[34]]]],[1,[[4,[28]]]],0,0,[[30,30],35],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[30,30],25],0,[1,[[4,[28]]]],[[1,[31,[28]]],2],[[1,32],2],[[1,33],2],[[1,34],2],[[1,28],2],0,[1,30],[-1,-2,[],[]],[-1,36,[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,38,[]],[-1,38,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,39],[[-1,-2],2,[],[]],[[40,26],27],[[40,26],27],[[39,26],27],[-1,-1,[]],[36,39],[41,39],[-1,-1,[]],[42,39],[43,39],[42,[[37,[39,-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,35],[36,40],[-1,-2,[],[]],[39,[[45,[44]]]],[-1,36,[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,38,[]],[-1,38,[]],[[],[[31,[39]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[46,-1],[[0,[46,-1]]],[47,48]],[49,49],[[-1,-2],2,[],[]],[[],50],[[],51],[[49,26],27],[[50,26],27],[[52,26],27],[[52,26],27],[[[53,[-1]],26],27,[54,48]],[[51,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[50,[[45,[55]]]],[50,[[45,[55]]]],[50,[[45,[6]]]],[50,[[45,[56]]]],[50,[[45,[6]]]],[[50,33],[[45,[49]]]],[[50,33],[[45,[49]]]],[[50,33],[[45,[49]]]],[[50,33],[[45,[49]]]],[49,34],[50,[[45,[34]]]],[49,34],[49,57],[50,[[45,[19]]]],[50,[[45,[6]]]],[50,[[45,[19]]]],[50,[[45,[19]]]],[50,5],[50,5],[50,[[45,[55]]]],[49,58],[50,10],[[[29,[28]]],35],[50,2],[[50,33,49],2],[[50,33,49],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,59],[[[60,[50]]],50],[[[60,[[53,[-1]]]]],[[61,[-1]]],48],[62,49],[[[29,[28]]],52],[-1,[[53,[-1]]],48],[[[61,[[53,[-1]]]],63],[[64,[[4,[2]]]]],[65,48]],[[[61,[51]],63],[[64,[[4,[2]]]]]],[[[61,[47]],63,50],[[64,[[4,[2]]]]]],[[[61,[[53,[-1]]]],63,66],[[64,[[4,[2]]]]],[67,48]],[[[61,[51]],63,66],[[64,[[4,[2]]]]]],[[[61,[[53,[-1]]]],63],[[64,[[4,[2]]]]],[65,48]],[[[61,[51]],63],[[64,[[4,[2]]]]]],[[[61,[[53,[-1]]]],63,[31,[28]]],[[64,[[4,[30]]]]],[65,48]],[[[61,[51]],63,[31,[28]]],[[64,[[4,[30]]]]]],[[50,55],2],[[50,6],2],[[50,56],2],[[50,6],2],[[50,34],2],[[50,19],2],[[50,6],2],[[50,19],2],[[50,19],2],[[50,5],2],[[50,5],2],[[50,55],2],[[50,59],2],[[50,10],2],[-1,-2,[],[]],[-1,36,[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[[49,62,[45,[58]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[68,68],[56,56],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],56],[[55,56,[31,[28]]],59],[[55,56,[31,[28]]],59],[[68,68],59],[[56,56],59],[[68,26],27],[[56,26],27],[[55,26],27],[[[69,[28]]],68],[-1,-1,[]],[-1,-1,[]],[28,56],[[[69,[28]]],55],[-1,-1,[]],[55,[[31,[28]]]],[[55,56],[[31,[28]]]],[68,28],[55,[[31,[28]]]],[55,58],[55,68],[[55,56,[31,[28]]],2],[[55,56,[31,[28]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[58,68],55],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[5,5],[16,16],[17,17],[18,18],[13,13],[12,12],[21,21],[15,15],[11,11],[7,7],[23,23],[14,14],[70,70],[71,71],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[70,70],72],[[],9],[[],5],[[],16],[[],21],[[],15],[[],23],[[],14],[[9,9],59],[[5,5],59],[[5,34],59],[[16,16],59],[[17,17],59],[[18,18],59],[[13,13],59],[[12,12],59],[[21,21],59],[[15,15],59],[[11,11],59],[[7,7],59],[[23,23],59],[[14,14],59],[[70,70],59],[[71,71],59],[[73,26],27],[[73,26],27],[[9,26],27],[[74,26],27],[[74,26],27],[[5,26],27],[[16,26],27],[[17,26],27],[[18,26],27],[[13,26],27],[[12,26],27],[[21,26],27],[[15,26],27],[[75,26],27],[[75,26],27],[[11,26],27],[[76,26],27],[[76,26],27],[[7,26],27],[[77,26],27],[[77,26],27],[[23,26],27],[[14,26],27],[[70,26],27],[[71,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[33,70],[-1,-1,[]],[33,71],[5,34],[78,42],[9,42],[16,42],[17,42],[18,42],[13,42],[12,42],[21,42],[15,42],[11,42],[23,42],[9,6],[14,8],[23,6],[16,6],[15,10],[7,34],[14,19],[17,19],[13,19],[16,6],[11,19],[11,19],[78,10],[9,10],[16,10],[17,10],[18,10],[13,10],[12,10],[21,10],[15,10],[11,10],[23,10],[[70,-1],2,79],0,[[42,19],35],[[71,33],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,35],[34,35],[[19,19],73],[6,9],[34,74],[34,5],[[19,6,6],16],[[10,19],17],[[19,10],18],[[10,19],13],[10,21],[[19,10,10],15],[19,75],[[10,19,19],11],[[71,71],76],[34,7],[6,77],[6,23],[[19,8],14],[[70,70],[[45,[72]]]],[6,35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[80,26],27],[[80,26],27],[[81,26],27],[[81,26],27],[-1,-1,[]],[-1,-1,[]],[[28,28],35],[-1,-2,[],[]],[-1,-2,[],[]],[82,35],[[28,28],80],[82,81],[-1,36,[]],[-1,36,[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,38,[]],[-1,38,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,32],-1,[]],[[10,10],-1,[]],[[10,10],2],[[10,32],2],[20,59],[10,83],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[20,20],[19,19],[6,6],[22,22],[8,8],[84,84],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[20,20],72],[[19,19],72],[[],10],[[],20],[[],19],[[],6],[[],8],[19,-1,[]],[19,-1,[]],[[10,10],59],[[10,32],59],[[20,59],59],[[20,20],59],[[19,36],59],[[19,19],59],[[19,42],59],[[19,[85,[42]]],59],[[6,6],59],[[22,22],59],[[8,8],59],[[84,84],59],[[10,26],27],[[20,26],27],[[19,26],27],[[19,26],27],[[6,26],27],[[22,26],27],[[8,26],27],[[84,26],27],[-1,-1,[]],[86,10],[87,10],[88,10],[33,10],[89,10],[59,10],[28,10],[34,10],[-1,-1,[]],[-1,-1,[]],[17,19],[13,19],[42,19],[-1,-1,[]],[9,6],[23,6],[-1,-1,[]],[-1,-1,[]],[28,84],[-1,-1,[]],0,0,0,0,[[20,-1],2,79],[[19,-1],2,79],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,10],[28,20],[36,19],0,0,[[10,32],[[45,[72]]]],[[10,10],[[45,[72]]]],[[20,59],[[45,[72]]]],[[20,20],[[45,[72]]]],[[19,19],[[45,[72]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,36,[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[90,90],[91,91],[57,57],[62,62],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[90,90],59],[[57,57],59],[[90,26],27],[[91,26],27],[[57,26],27],[[62,26],27],[-1,-1,[]],[28,90],[-1,-1,[]],[-1,-1,[]],[28,57],[-1,-1,[]],[91,33],[91,90],[62,[[45,[34]]]],[62,[[45,[34]]]],[62,[[45,[57]]]],[62,[[45,[58]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[90,33],91],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[92,93],[92,94],[[92,95,-2],[[4,[-1]]],[],[[97,[],[[96,[[4,[-1]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[92]]],98],[[92,26],27],[-1,-1,[]],[99,92],[100,[[4,[92]]]],[-1,-2,[],[]],[92,[[2,[101,102]]]],[92,[[4,[100]]]],[92,[[4,[[45,[58]]]]]],[92,[[4,[103]]]],[92,[[4,[59]]]],[[92,[31,[28]]],[[4,[30]]]],[92,[[4,[103]]]],[[[61,[92]],63],[[64,[[4,[2]]]]]],[[92,63,66],[[64,[[4,[30]]]]]],[[[61,[92]],63,66],[[64,[[4,[2]]]]]],[[92,63],[[64,[[4,[2]]]]]],[[[61,[92]],63],[[64,[[4,[2]]]]]],[[[61,[92]],63,[31,[28]]],[[64,[[4,[30]]]]]],[[92,63],[[64,[[4,[2]]]]]],[[[61,[92]],63,[31,[104]]],[[64,[[4,[30]]]]]],[92,[[4,[2]]]],[[92,95],[[4,[105]]]],[[92,[45,[58]]],[[4,[2]]]],[[92,59],[[4,[2]]]],[[92,34],[[4,[2]]]],[92,[[2,[106,107]]]],[92,[[4,[[45,[35]]]]]],[100,[[4,[92]]]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[[92,95,-2],[[4,[-1]]],[],[[108,[],[[96,[[4,[-1]]]]]]]],[[92,[31,[28]]],[[4,[30]]]],[[92,-1],[[4,[30]]],109],[[92,[31,[110]]],[[4,[30]]]],[[92,[31,[28]]],[[4,[30]]]],[[92,[31,[104]]],[[4,[30]]]],[92,[[4,[34]]]],[-1,38,[]],[-1,-2,[],[]],[92,[[4,[2]]]],[[[61,[-1]]],[[0,[-1]]],67],[[[61,[-1]],50],[[112,[[111,[97]]]]],67],[[[61,[-1]],5,34],[[0,[-1]]],67],[[[61,[-1]]],[[0,[-1]]],67],[[[61,[-1]]],[[0,[-1]]],67],[[[61,[-1]]],[[0,[-1]]],67],[[[61,[-1]],90],[[0,[-1]]],67],[[[61,[-1]],91],[[0,[-1]]],65],[[[61,[-1]],50,58,34,-2],[[112,[[111,[97]]]]],65,113],[[[61,[-1]],33,5,[31,[28]]],[[0,[-1]]],65],[[[61,[-1]],56],[[0,[-1]]],65],[[[61,[-1]],58],[[0,[-1]]],65],[[[61,[-1]],55],[[0,[-1]]],65],[[[61,[-1]],62],[[0,[-1]]],65]],"c":[],"p":[[5,"ByteBuffer",0],[1,"tuple"],[10,"Decoder",0],[8,"Result",991],[5,"ChunkSize",307],[5,"Object",691],[5,"StreamBegin",307],[5,"EcmaArray",691],[5,"Connect",307],[5,"Number",691],[5,"Publish",307],[5,"OnFcPublish",307],[5,"FcPublish",307],[5,"SetDataFrame",307],[5,"CreateStreamResult",307],[5,"ConnectResult",307],[5,"ReleaseStream",307],[5,"ReleaseStreamResult",307],[5,"AmfString",691],[5,"Boolean",691],[5,"CreateStream",307],[5,"Null",691],[5,"OnStatus",307],[10,"Encoder",0],[5,"InsufficientBufferLength",0],[5,"Formatter",992],[8,"Result",992],[1,"u8"],[5,"Vec",993],[1,"usize"],[1,"slice"],[1,"f64"],[1,"u16"],[1,"u32"],[5,"Error",991],[5,"String",994],[6,"Result",995],[5,"TypeId",996],[6,"Protocol",92],[5,"InvalidProtocol",92],[5,"OsStr",997],[1,"str"],[5,"OsString",997],[5,"PossibleValue",998],[6,"Option",999],[10,"AsyncHandlerExt",127],[10,"AsyncHandler",127],[10,"Unpin",1000],[5,"LastChunk",127],[5,"RtmpContext",127],[5,"VecStream",127],[5,"InconsistentSha",127],[5,"StreamWrapper",127],[10,"Debug",992],[5,"Handshake",243],[6,"EncryptionAlgorithm",243],[6,"MessageType",849],[5,"Duration",1001],[1,"bool"],[5,"Arc",1002],[5,"Pin",1003],[6,"MessageHeader",849],[5,"Context",1004],[6,"Poll",1005],[10,"AsyncWrite",1006],[5,"ReadBuf",1007],[10,"AsyncRead",1008],[5,"Version",243],[1,"array"],[6,"Channel",307],[6,"EventType",307],[6,"Ordering",1009],[5,"InconsistentCommand",307],[5,"NegativeChunkSize",307],[5,"InvalidPublishingType",307],[5,"InconsistentEventType",307],[5,"PublishingFailure",307],[10,"Command",307],[10,"Hasher",1010],[5,"InconsistentMarker",662],[5,"InvalidString",662],[5,"FromUtf8Error",994],[1,"u64"],[6,"Marker",691],[6,"Cow",1011],[1,"f32"],[1,"i32"],[1,"i8"],[1,"i16"],[6,"MessageFormat",849],[5,"BasicHeader",849],[5,"RtmpStream",930],[5,"BorrowedFd",1012],[8,"RawFd",1013],[5,"Interest",1014],[17,"Output"],[10,"FnMut",1015],[10,"ToSocketAddrs",1016],[5,"TcpStream",1017],[5,"TcpStream",1018],[5,"OwnedReadHalf",1019],[5,"OwnedWriteHalf",1019],[6,"SocketAddr",1020],[5,"IoSlice",1021],[5,"Ready",1022],[5,"ReadHalf",1023],[5,"WriteHalf",1023],[10,"FnOnce",1015],[10,"BufMut",1024],[5,"IoSliceMut",1021],[5,"Box",1025],[5,"PollFn",1026],[10,"ChunkData",307],[10,"UserControl",307]],"b":[[12,"impl-Decoder%3CChunkSize%3E-for-ByteBuffer"],[13,"impl-Decoder%3CObject%3E-for-ByteBuffer"],[14,"impl-Decoder%3CStreamBegin%3E-for-ByteBuffer"],[15,"impl-Decoder%3CEcmaArray%3E-for-ByteBuffer"],[16,"impl-Decoder%3CConnect%3E-for-ByteBuffer"],[17,"impl-Decoder%3CNumber%3E-for-ByteBuffer"],[18,"impl-Decoder%3CPublish%3E-for-ByteBuffer"],[19,"impl-Decoder%3COnFcPublish%3E-for-ByteBuffer"],[20,"impl-Decoder%3CFcPublish%3E-for-ByteBuffer"],[21,"impl-Decoder%3CSetDataFrame%3E-for-ByteBuffer"],[22,"impl-Decoder%3CCreateStreamResult%3E-for-ByteBuffer"],[23,"impl-Decoder%3CConnectResult%3E-for-ByteBuffer"],[24,"impl-Decoder%3CReleaseStream%3E-for-ByteBuffer"],[25,"impl-Decoder%3CReleaseStreamResult%3E-for-ByteBuffer"],[26,"impl-Decoder%3CAmfString%3E-for-ByteBuffer"],[27,"impl-Decoder%3CBoolean%3E-for-ByteBuffer"],[28,"impl-Decoder%3CCreateStream%3E-for-ByteBuffer"],[29,"impl-Decoder%3CNull%3E-for-ByteBuffer"],[30,"impl-Decoder%3COnStatus%3E-for-ByteBuffer"],[34,"impl-Encoder%3CNumber%3E-for-ByteBuffer"],[35,"impl-Encoder%3CObject%3E-for-ByteBuffer"],[36,"impl-Encoder%3CCreateStreamResult%3E-for-ByteBuffer"],[37,"impl-Encoder%3CNull%3E-for-ByteBuffer"],[38,"impl-Encoder%3CReleaseStreamResult%3E-for-ByteBuffer"],[39,"impl-Encoder%3CEcmaArray%3E-for-ByteBuffer"],[40,"impl-Encoder%3CConnectResult%3E-for-ByteBuffer"],[41,"impl-Encoder%3CBoolean%3E-for-ByteBuffer"],[42,"impl-Encoder%3CCreateStream%3E-for-ByteBuffer"],[43,"impl-Encoder%3CConnect%3E-for-ByteBuffer"],[44,"impl-Encoder%3CReleaseStream%3E-for-ByteBuffer"],[45,"impl-Encoder%3COnFcPublish%3E-for-ByteBuffer"],[46,"impl-Encoder%3CAmfString%3E-for-ByteBuffer"],[47,"impl-Encoder%3CPublish%3E-for-ByteBuffer"],[48,"impl-Encoder%3CStreamBegin%3E-for-ByteBuffer"],[49,"impl-Encoder%3COnStatus%3E-for-ByteBuffer"],[50,"impl-Encoder%3CSetDataFrame%3E-for-ByteBuffer"],[51,"impl-Encoder%3CFcPublish%3E-for-ByteBuffer"],[52,"impl-Encoder%3CChunkSize%3E-for-ByteBuffer"],[53,"impl-Display-for-InsufficientBufferLength"],[54,"impl-Debug-for-InsufficientBufferLength"],[101,"impl-Display-for-InvalidProtocol"],[102,"impl-Debug-for-InvalidProtocol"],[105,"impl-From%3CString%3E-for-Protocol"],[106,"impl-From%3C%26OsStr%3E-for-Protocol"],[108,"impl-From%3C%26str%3E-for-Protocol"],[109,"impl-From%3COsString%3E-for-Protocol"],[151,"impl-Debug-for-InconsistentSha"],[152,"impl-Display-for-InconsistentSha"],[420,"impl-PartialEq-for-ChunkSize"],[421,"impl-PartialEq%3Cu32%3E-for-ChunkSize"],[435,"impl-Debug-for-InconsistentCommand"],[436,"impl-Display-for-InconsistentCommand"],[438,"impl-Display-for-NegativeChunkSize"],[439,"impl-Debug-for-NegativeChunkSize"],[448,"impl-Display-for-InvalidPublishingType"],[449,"impl-Debug-for-InvalidPublishingType"],[451,"impl-Debug-for-InconsistentEventType"],[452,"impl-Display-for-InconsistentEventType"],[454,"impl-Display-for-PublishingFailure"],[455,"impl-Debug-for-PublishingFailure"],[668,"impl-Display-for-InconsistentMarker"],[669,"impl-Debug-for-InconsistentMarker"],[670,"impl-Display-for-InvalidString"],[671,"impl-Debug-for-InvalidString"],[706,"impl-Add%3Cf64%3E-for-Number"],[707,"impl-Add-for-Number"],[708,"impl-AddAssign-for-Number"],[709,"impl-AddAssign%3Cf64%3E-for-Number"],[749,"impl-PartialEq-for-Number"],[750,"impl-PartialEq%3Cf64%3E-for-Number"],[751,"impl-PartialEq%3Cbool%3E-for-Boolean"],[752,"impl-PartialEq-for-Boolean"],[753,"impl-PartialEq%3CString%3E-for-AmfString"],[754,"impl-PartialEq-for-AmfString"],[755,"impl-PartialEq%3C%26str%3E-for-AmfString"],[756,"impl-PartialEq%3CCow%3C\'a,+str%3E%3E-for-AmfString"],[763,"impl-Debug-for-AmfString"],[764,"impl-Display-for-AmfString"],[770,"impl-From%3Cf32%3E-for-Number"],[771,"impl-From%3Ci32%3E-for-Number"],[772,"impl-From%3Ci8%3E-for-Number"],[773,"impl-From%3Cu16%3E-for-Number"],[774,"impl-From%3Ci16%3E-for-Number"],[775,"impl-From%3Cbool%3E-for-Number"],[776,"impl-From%3Cu8%3E-for-Number"],[777,"impl-From%3Cu32%3E-for-Number"],[780,"impl-From%3CReleaseStream%3E-for-AmfString"],[781,"impl-From%3CFcPublish%3E-for-AmfString"],[782,"impl-From%3C%26str%3E-for-AmfString"],[784,"impl-From%3CConnect%3E-for-Object"],[785,"impl-From%3COnStatus%3E-for-Object"],[808,"impl-PartialOrd%3Cf64%3E-for-Number"],[809,"impl-PartialOrd-for-Number"],[810,"impl-PartialOrd%3Cbool%3E-for-Boolean"],[811,"impl-PartialOrd-for-Boolean"]]}],\
["sheave_integration_tests",{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[],"b":[]}],\
["sheave_server",{"doc":"","t":"CCCHHHHHHHCFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNHHNNNNN","n":["handlers","net","server","handle_connect","handle_create_stream","handle_fc_publish","handle_first_handshake","handle_publish","handle_release_stream","handle_second_handshake","rtmp","RtmpListener","accept","as_fd","as_raw_fd","bind","borrow","borrow_mut","fmt","from","from_std","into","into_std","local_addr","poll_accept","set_ttl","try_from","try_from","try_into","ttl","type_id","vzip","Server","borrow","borrow_mut","fmt","from","into","into_future","new","poll","provide_message_id","return_message_id","try_from","try_into","try_poll","type_id","vzip"],"q":[[0,"sheave_server"],[3,"sheave_server::handlers"],[10,"sheave_server::net"],[11,"sheave_server::net::rtmp"],[32,"sheave_server::server"],[48,"core::pin"],[49,"tokio::io::async_read"],[50,"tokio::io::async_write"],[51,"core::marker"],[52,"sheave_core::net::rtmp"],[53,"core::net::socket_addr"],[54,"std::io::error"],[55,"std::os::fd::owned"],[56,"std::os::fd::raw"],[57,"tokio::net::addr"],[58,"core::fmt"],[59,"core::fmt"],[60,"core::task::wake"],[61,"core::task::poll"],[62,"core::result"],[63,"core::any"],[64,"core::fmt"]],"d":["","","","Handles a connect command as a server.","Handles a createStream command as a server.","Handles a FCPublish command as a server.","Handles a handshake chunk of the first step as a server. â€¦","Handles a publish command as a server.","Handles a releaseStream command as a server.","Handles a handshake chunk of the second step as a server. â€¦","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Provides a message ID to a server instance. This considers â€¦","Registers a message ID released from a server. This â€¦","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,21,21,21,21,21,21,21,21,0,0,21,21,21,21,21],"f":[0,0,0,[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],[[[1,[-1]]],[[0,[-1]]],[2,3,4]],0,0,[5,[[9,[[8,[6,7]]]]]],[5,10],[5,11],[-1,[[9,[5]]],12],[-1,-2,[],[]],[-1,-2,[],[]],[[5,13],14],[-1,-1,[]],[15,[[9,[5]]]],[-1,-2,[],[]],[5,[[9,[15]]]],[5,[[9,[7]]]],[[5,16],[[17,[[9,[[8,[6,7]]]]]]]],[[5,18],[[9,[8]]]],[-1,[[19,[-2]]],[],[]],[15,[[9,[5]]]],[-1,[[19,[-2]]],[],[]],[5,[[9,[18]]]],[-1,20,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]],13],14,[22,2,3,4]],[-1,-1,[]],[-1,-2,[],[]],[-1,[],[]],[-1,[[21,[-1]]],[2,3,4]],[[[1,[[21,[-1]]]],16],[[17,[-2]]],[2,3,4],[]],[[],18],[18,8],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[1,[-1]],16],17,[]],[-1,20,[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Pin",48],[10,"AsyncRead",49],[10,"AsyncWrite",50],[10,"Unpin",51],[5,"RtmpListener",11],[5,"RtmpStream",52],[6,"SocketAddr",53],[1,"tuple"],[8,"Result",54],[5,"BorrowedFd",55],[8,"RawFd",56],[10,"ToSocketAddrs",57],[5,"Formatter",58],[8,"Result",58],[5,"TcpListener",59],[5,"Context",60],[6,"Poll",61],[1,"u32"],[6,"Result",62],[5,"TypeId",63],[5,"Server",32],[10,"Debug",58]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
